#!/bin/bash

set -euo pipefail

function usage() {
  echo "$0 [-c code] [-t type]"
  exit 1
}

url="https://data.services.jetbrains.com/products?"

while getopts "h?c:t:" flag
do
  case "$flag" in
    c)
      url="$url&code=$OPTARG"
      ;;
    t)
      url="$url&release.type=$OPTARG"
      ;;
    *)
      usage
      ;;
  esac
done

out=tmp

if [[ ! -r $out.json ]]
then
  curl -s "$url" | jq . > $out.json
fi

set +e
read -d '' -r script <<'EOF'
import "./semver" as semver;
.[] |
"code", .code, (.releases|map(select(.downloads) | .+{b:.build|semver::parse|flatten})|sort_by(.b))[-1] as $r |
"type", $r.type,
"build", $r.build,
"link", $r.downloads.linux.link,
"size", $r.downloads.linux.size
EOF
set -e

#echo script:
#echo $script

cat "$out.json" | jq -r "${args[@]}" "$script"
rm -f $out.json
